<?php
 class Affiliates_Pixel { private $home = null; private $pname = null; private $parametric = false; const IXAP543 = 1; public function __construct( $IXAP544, $IXAP147 ) { $IXAP544 = rtrim( $IXAP544, '/\\' ) . '/'; $this->home = $IXAP544; $this->pname = $IXAP147; } public function __set( $name, $IXAP87 ) { switch( $name ) { case 'home' : case 'pname' : $this->$name = $IXAP87; break; case 'parametric' : $this->parametric = (bool) $IXAP87; break; } } public function __get( $name ) { switch( $name ) { case 'home' : case 'pname' : case 'parametric' : return $this->$name; break; default : return null; } } public function get_pixel_url() { if ( !$this->parametric ) { $IXAP163 = $this->home . $this->get_pixel_name(); } else { $IXAP163 = add_query_arg( array( str_replace( '.', '_', $this->get_pixel_name() ) => self::IXAP543 ), $this->home ); } return $IXAP163; } public function get_pixel_name() { return $this->pname . '.png'; } public function is_pixel_request( $IXAP163 ) { $IXAP545 = str_replace( '.', '_', $this->get_pixel_name() ); if ( isset( $_REQUEST[$IXAP545] ) && ( $_REQUEST[$IXAP545] == self::IXAP543 ) ) { $IXAP15 = true; } else { $IXAP157 = parse_url( $IXAP163 ); $IXAP546 = parse_url( $this->home ); $IXAP547 = str_replace( $IXAP546['path'], '', $IXAP157['path'] ); $IXAP15 = $IXAP547 == $this->get_pixel_name(); } return $IXAP15; } public function pixel() { header( 'Content-Type: image/png' ); header( 'Pragma: no-cache'); header( 'Cache-Control: no-cache, no-store' ); header( 'Expires: 0'); if ( $IXAP548 = @file_get_contents( AFFILIATES_PLUGIN_URL . '/images/pixel.png' ) ) { die( $IXAP548 ); } } public static function init() { } } Affiliates_Pixel::init(); 